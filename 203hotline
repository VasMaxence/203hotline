#!/usr/bin/env python3

import sys
import math
import time

def usage():
    print("USAGE:\n\t./203hotline [n k d]\n"
          "\nDESCRPTION:\n"
          "\tn\tn value for the computation of (n k)\n"
          "\tk\tk value for the computation of (n k)\n"
          "\td\taverage duration of calls (in seconds)")

class hotline:
    def __init__(self, argv):
        self.arg1 = argv[1]
        if (len(argv) == 3):
            self.arg2 = argv[2]

    def binomialCoef(self, n, k):
        return math.factorial(n) // (math.factorial(k) * math.factorial(n - k))

    def binomialLawCoef(self, n, k):
        print(str(k) + "-combination of a " + str(n) + " set:\n%d" % self.binomialCoef(n, k))

    def printBinomialLaw(self):
        working_hours = 8
        phone_number = 25
        p = int(self.arg1) / (60 * 60 * working_hours)
        start = time.time()
        overload = 0
        n = 3500

        print("Binomial distribution:\n%d -> %.3f" % (0, self.binomialCoef(n, 0) * (p ** 0) * ((1 - p) ** (n - 0))), end='')
        for i in range(1, 51):
            if i > 0 and (i % 6):
                print(end='\t')
            result = self.binomialCoef(n, i) * (p ** i) * ((1 - p) ** (n - i))
            print("%d -> %.3f" % (i, result), end='')
            if i > phone_number:
                overload += result
            if ((i + 1) % 6) == 0:
                print(end='\n')
        if int(self.arg1) > 320:
            overload = 1
        print("\noverload: %.1f" % (overload * 100) + "%")
        print("computation time: %.2f ms" % ((time.time() - start) * 1000))

    def printLaw(self):
        employee_number = 3500
        working_hours = 8
        phone_number = 25
        start = time.time()
        proba = employee_number * (int(self.arg1) / (60 * 60 * working_hours))
        overload = 0
        print("\nPoisson distribution:\n%d -> %.3f" %
              (0, math.exp(-proba) * (proba ** 0) / math.factorial(0)), end='')
        for i in range(1, 51):
            if i > 0 and (i % 6):
                print(end='\t')
            result = math.exp(-(proba)) * (proba ** i) / math.factorial(i)
            print("%d -> %.3f" % (i, result), end='')
            if i > phone_number:
                overload += result
            if ((i + 1) % 6) == 0:
                print(end='\n')
        if int(self.arg1) > 320:
            overload = 1
        print("\noverload: %.1f" % (overload * 100) + "%")
        print("computation time: %.2f ms" % ((time.time() - start) * 1000))

def main():
    if len(sys.argv) == 2:
        if sys.argv[1] == "-h":
            usage()
        else:
            _prog = hotline(sys.argv)
            _prog.printBinomialLaw()
            _prog.printLaw()
    elif len(sys.argv) == 3:
        _prog = hotline(sys.argv)
        _prog.binomialLawCoef(int(sys.argv[1]), int(sys.argv[2]))
    else:
        usage()
        print("\n\tinvalid argument's number")
        sys.exit(84)

if __name__ == "__main__":
    main()
